# -*- coding: utf-8 -*-
"""YOLO-TESTING-8.22

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zK_VEUtRLjkscBeveQ3OgC9R0QjS9Q6E

# Before Start
"""

!nvidia-smi

import os
HOME = os.getcwd()
print(HOME)

"""#YOLOV8"""

!pip install ultralytics==8.0.28

from IPython import display
display.clear_output()

import ultralytics
ultralytics.checks()

from ultralytics import YOLO
from IPython.display import display, Image

"""# Import Custom Data"""

# # Visdrone
# !pip install roboflow

# from roboflow import Roboflow
# rf = Roboflow(api_key="dqvZ8FJITnxorBxJO3PL")
# project = rf.workspace("imperial-dkf3k").project("visdrone-b5gnh")
# dataset = project.version(1).download("yolov8")


# # UAV
# !pip install roboflow

# from roboflow import Roboflow
# rf = Roboflow(api_key="dqvZ8FJITnxorBxJO3PL")
# project = rf.workspace("imperial-dkf3k").project("uav-fisheye")
# dataset = project.version(1).download("yolov8")

# # VIS+UAV
# !pip install roboflow

# from roboflow import Roboflow
# rf = Roboflow(api_key="dqvZ8FJITnxorBxJO3PL")
# project = rf.workspace("imperial-dkf3k").project("vis-uav")
# dataset = project.version(2).download("yolov8")


# # Ground-Truth Version
# !pip install roboflow

# from roboflow import Roboflow
# rf = Roboflow(api_key="dqvZ8FJITnxorBxJO3PL")
# project = rf.workspace("imperial-dkf3k").project("coco-format-dwneu")
# dataset = project.version(1).download("yolov8")

# # ICL Data (For test only)
# !pip install roboflow

# from roboflow import Roboflow
# rf = Roboflow(api_key="dqvZ8FJITnxorBxJO3PL")
# project = rf.workspace("imperial-dkf3k").project("icl_data")
# dataset = project.version(1).download("yolov8")

# # DDOS-fisheye-everything
# !mkdir /content/DDOS-Fisheye
# !unzip /content/drive/MyDrive/Final_Project/wires/latest-DDOS-Fisheye.yolov8.zip -d /content/DDOS-Fisheye

# # DDOS-standard-everything
# # !pip install roboflow

# # from roboflow import Roboflow
# # rf = Roboflow(api_key="dqvZ8FJITnxorBxJO3PL")
# # project = rf.workspace("imperial-dkf3k").project("ddos-yolo")
# # dataset = project.version(2).download("yolov8")

# !mkdir /content/DDOS-standard
# !unzip /content/drive/MyDrive/Final_Project/wires/DDOS-YOLO_standard.v2i.yolov8.zip -d /content/DDOS-standard



# DDOS-standard-wires
!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="dqvZ8FJITnxorBxJO3PL")
project = rf.workspace("imperial-dkf3k").project("wires-yeirt")
dataset = project.version(1).download("yolov8")

# DDOS-fisheye-wires
!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="f8a4kigxZTi06GWrdQRh")
project = rf.workspace("imperial-college-london-lxyhp").project("fisheye-wires")
dataset = project.version(2).download("yolov8")

!pwd

# Commented out IPython magic to ensure Python compatibility.
# %cd "/content/COCO-format-1"
# %cd "/content/UAV-fisheye-1"
# %cd "/content/2nd-DDOS-Fisheye-everything/2nd-part-DDOS-fisheye"

!ls

# memory footprint support libraries/code
!ln -sf /opt/bin/nvidia-smi /usr/bin/nvidia-smi
!pip install gputil
!pip install psutil
!pip install humanize

import psutil
import humanize
import os
import GPUtil as GPU

GPUs = GPU.getGPUs()
# XXX: only one GPU on Colab and isnâ€™t guaranteed
gpu = GPUs[0]
def printm():
    process = psutil.Process(os.getpid())
    print("Gen RAM Free: " + humanize.naturalsize(psutil.virtual_memory().available), " |     Proc size: " + humanize.naturalsize(process.memory_info().rss))
    print("GPU RAM Free: {0:.0f}MB | Used: {1:.0f}MB | Util {2:3.0f}% | Total     {3:.0f}MB".format(gpu.memoryFree, gpu.memoryUsed, gpu.memoryUtil*100, gpu.memoryTotal))
printm()

# !yolo task=segment mode=train model=yolov8s-seg.pt  data=data.yaml epochs=100 batch=8 imgsz=1280 save=true

model = YOLO('/content/1st-fisheye-best.pt')  # load a pretrained model (recommended for training)
results = model.train(data='/content/2nd-DDOS-Fisheye-everything/2nd-part-DDOS-fisheye/data.yaml',
                      epochs=40,
                      imgsz=1280,
                      batch=2,
                      patience=8,
                      save=True,
                      project='/content/Results',
                      name='2nd-DDOS-Fisheye-everything')

import locale
print(locale.getpreferredencoding())

def getpreferredencoding(do_setlocale = True):
    return "UTF-8"
locale.getpreferredencoding = getpreferredencoding
print(locale.getpreferredencoding())

!zip -r /content/1st-training-fisheye.zip /content/Results/1st-DDOS-Fisheye-everything3

!ls /content/Results/1st-DDOS-Fisheye-everything3

Image(filename=f'/content/Results/1st-DDOS-Fisheye-everything3/confusion_matrix.png', width=600)

Image(filename=f'/content/Results/1st-DDOS-Fisheye-everything3/results.png', width=600)

Image(filename=f'//content/Results/1st-DDOS-Fisheye-everything3/val_batch0_pred.jpg', width=600)

"""# Test UAV-GT on custom dataset

## UAV-GT
"""

!yolo task=segment mode=val model=/content/UAV-GT.pt data=/content/COCO-format-1/data.yaml

"""## VIS"""

!yolo task=segment mode=val model=/content/UAV-GT.pt data=/content/Visdrone-1/data.yaml

"""### UAV"""

!yolo task=segment mode=val model=/content/UAV-GT.pt data=/content/UAV-fisheye-1/data.yaml

"""## VIS+UAV"""

!yolo task=segment mode=val model=/content/UAV-GT.pt data=/content/VIS+UAV-2/data.yaml

"""## ICL data"""

!yolo task=segment mode=val model=/content/UAV-GT.pt data=/content/ICL_data-1/data.yaml

"""## DDOS (standard frames)(NEW)"""

!yolo task=segment mode=val model=/content/UAV-GT.pt data=/content/DDOS-standard/data.yaml

"""## DDOS (Fisheye)(NEW)"""

!yolo task=segment mode=val model=/content/UAV-GT.pt data=/content/DDOS-Fisheye/latest-DDOS-Fisheye.yolov8/data.yaml

"""# Test VIS+UAV on custom dataset

## UAV-GT
"""

!yolo task=segment mode=val model=/content/VIS+UAV-best.pt data=/content/COCO-format-1/data.yaml

"""## VIS"""

!yolo task=segment mode=val model=/content/VIS+UAV-best.pt data=/content/Visdrone-1/data.yaml

"""## UAV"""

!yolo task=segment mode=val model=/content/VIS+UAV-best.pt data=/content/UAV-fisheye-1/data.yaml

"""## VIS+UAV"""

!yolo task=segment mode=val model=/content/VIS+UAV-best.pt data=/content/VIS+UAV-2/data.yaml

"""## ICL data"""

!yolo task=segment mode=val model=/content/VIS+UAV-best.pt data=/content/ICL_data-1/data.yaml

"""## DDOS (standard frames)(NEW)"""

!yolo task=segment mode=val model=/content/VIS+UAV-best.pt data=/content/DDOS-standard/data.yaml

"""## DDOS (Fisheye)(NEW)"""

!yolo task=segment mode=val model=/content/VIS+UAV-best.pt data=/content/DDOS-Fisheye/latest-DDOS-Fisheye.yolov8/data.yaml

"""# Test DDOS-everything (standard) on custom dataset

## UAV-GT
"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/COCO-format-1/data.yaml

"""## VIS"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/Visdrone-1/data.yaml

"""### UAV"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/UAV-fisheye-1/data.yaml

"""## VIS+UAV"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/VIS+UAV-2/data.yaml

"""## ICL data"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/ICL_data-1/data.yaml

"""## DDOS (standard frames)"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/DDOS-YOLO-2/data.yaml

"""## DDOS (Fisheye)"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/DDOS-Fisheye/latest-DDOS-Fisheye.yolov8/data.yaml

"""## DDOS (standard)"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/wires-1/data.yaml

"""## DDOS (Fisheye)"""

!yolo task=segment mode=val model=/content/ddos-everything-best.pt data=/content/Fisheye-wires-2/data.yaml

"""# Test DDOS-everything-fisheye on custom dataset

## UAV-GT
"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/COCO-format-1/data.yaml

"""## VIS"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/Visdrone-1/data.yaml

"""### UAV"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/UAV-fisheye-1/data.yaml

"""## VIS+UAV"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/VIS+UAV-2/data.yaml

"""## ICL data"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/ICL_data-1/data.yaml

"""## DDOS (standard frames)"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/DDOS-YOLO-2/data.yaml

"""## DDOS (Fisheye)"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/DDOS-Fisheye/latest-DDOS-Fisheye.yolov8/data.yaml

"""## DDOS (standard)"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/wires-1/data.yaml

"""## DDOS (Fisheye)"""

!yolo task=segment mode=val model=/content/ddos-fisheye-everything.pt data=/content/Fisheye-wires-2/data.yaml

"""# Test DDOS-UAV+VIS-everything-fisheye on custom dataset

## UAV-GT
"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/COCO-format-1/data.yaml

"""## VIS"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/Visdrone-1/data.yaml

"""### UAV"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/UAV-fisheye-1/data.yaml

"""## VIS+UAV"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/VIS+UAV-2/data.yaml

"""## ICL data"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/ICL_data-1/data.yaml

"""## DDOS (standard frames)"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/DDOS-YOLO-2/data.yaml

"""## DDOS (Fisheye)"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/DDOS-Fisheye/latest-DDOS-Fisheye.yolov8/data.yaml

"""## DDOS (standard)"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/wires-1/data.yaml

"""## DDOS (Fisheye)"""

!yolo task=segment mode=val model=/content/fisheye-UAV-VIS-everything-best.pt data=/content/Fisheye-wires-2/data.yaml

"""# Test ddos-wires (standard) on custom dataset

## DDOS (standard-wires)
"""

!yolo task=segment mode=val model=/content/ddos-wires.pt data=/content/wires-1/data.yaml

"""## DDOS (Fisheye-wires)"""

!yolo task=segment mode=val model=/content/ddos-wires.pt data=/content/Fisheye-wires-2/data.yaml

"""# Test ddos-wires (fisheye) on custom dataset

## DDOS (standard)
"""

!yolo task=segment mode=val model=/content/ddos-fisheye-wires-best.pt data=/content/wires-1/data.yaml

"""## DDOS (Fisheye)"""

!yolo task=segment mode=val model=/content/ddos-fisheye-wires-best.pt data=/content/Fisheye-wires-2/data.yaml

"""#Inference with Custom Model"""

!yolo task=segment mode=predict model=/content/UAV-GT.pt conf=0.7 source=/content/Predict-Images save=true

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'runs/segment/predict/*.jpg'):
      display(Image(filename=image_path, height=600))
      print("\n")

"""## Inference using Visdrone+UAV

"""

!yolo task=segment mode=predict model=/content/VIS+UAV-best.pt conf=0.7 source=/content/Predict-Images save=true

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'runs/segment/predict2/*.jpg'):
      display(Image(filename=image_path, height=600))
      print("\n")

"""## Inference using ddos-fisheye-everything"""

!yolo task=segment mode=predict model=/content/ddos-fisheye-everything.pt conf=0.7 source=/content/Predict-Images save=true

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'runs/segment/predict3/*.jpg'):
      display(Image(filename=image_path, height=600))
      print("\n")

"""## Inference using ddos-UAV+VIS-fisheye-everything"""

!yolo task=segment mode=predict model=/content/fisheye-UAV-VIS-everything-best.pt conf=0.7 source=/content/Predict-Images save=true

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'runs/segment/predict4/*.jpg'):
      display(Image(filename=image_path, height=600))
      print("\n")

"""## Inference with DDOS-everything-standard"""

!yolo task=segment mode=predict model=/content/ddos-everything-best.pt conf=0.7 source=/content/Predict-Images save=true

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'runs/segment/predict5/*.jpg'):
      display(Image(filename=image_path, height=600))
      print("\n")

"""# Performance of Original YOLO"""

!yolo task=segment mode=predict model=yolov8s-seg.pt conf=0.7 source=/content/Predict-Images save=true

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'runs/segment/predict6/*.jpg'):
      display(Image(filename=image_path, height=600))
      print("\n")

!yolo task=segment mode=val model=yolov8s-seg.pt data=/content/ICL_data-1/data.yaml

!yolo task=segment mode=val model=yolov8s-seg.pt data=/content/Visdrone-1/data.yaml

!yolo task=segment mode=val model=yolov8s-seg.pt data=/content/UAV-fisheye-1/data.yaml

!yolo task=segment mode=val model=yolov8s-seg.pt data=/content/COCO-format-1/data.yaml

!yolo task=segment mode=val model=yolov8s-seg.pt data=/content/VIS+UAV-2/data.yaml

!yolo task=segment mode=val model=yolov8s-seg.pt data=/content/DDOS-YOLO-2/data.yaml

!yolo task=segment mode=val model=yolov8s-seg.pt data=/content/DDOS-Fisheye/latest-DDOS-Fisheye.yolov8/data.yaml

"""## On S.I. Data"""

!yolo task=segment mode=predict model=yolov8s-seg.pt conf=0.2 source=/content/SI-data save=true

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'runs/segment/predict4/*.jpg'):
      display(Image(filename=image_path, height=600))
      print("\n")

"""# Test Results

## VIS+UAV

### Original YOLOv8
"""

!yolo task=segment mode=predict model=yolov8s-seg.pt conf=0.7 source=/content/VIS+UAV-2/test/images save=true

!yolo task=segment mode=predict model=yolov8s-seg.pt conf=0.7 source=/content/PredictedImages save=true

# import glob
# from IPython.display import Image, display

# for image_path in glob.glob(f'runs/segment/predict4/*.jpg'):
#       display(Image(filename=image_path, height=600))
#       print("\n")
!zip -r /content/YOLOv8_test_ppl.zip runs/segment/predict

"""### YOLO-VIS+UAV"""

!yolo task=segment mode=predict model=/content/VIS+UAV-best.pt conf=0.7 source=/content/VIS+UAV-2/test/images save=true

!yolo task=segment mode=predict model=/content/VIS+UAV-best.pt conf=0.7 source=/content/PredictedImages save=true

!zip -r /content/YOLO_VIS_UAV_test_ppl.zip /content/runs/segment/predict2

"""### DDOS-Fine-Tuning"""

!yolo task=segment mode=predict model=/content/fisheye-UAV-VIS-everything-best.pt conf=0.7 source=/content/VIS+UAV-2/test/images save=true

!yolo task=segment mode=predict model=/content/fisheye-UAV-VIS-everything-best.pt conf=0.7 source=/content/PredictedImages save=true

!zip -r /content/DDOS_Finetuning_test_ppl.zip /content/runs/segment/predict3

"""## DDOS(F)

### Original YOLOv8
"""

!yolo task=segment mode=predict model=yolov8s-seg.pt conf=0.3 source=/content/DDOS-wires save=true

# import glob
# from IPython.display import Image, display

# for image_path in glob.glob(f'runs/segment/predict4/*.jpg'):
#       display(Image(filename=image_path, height=600))
#       print("\n")
!zip -r /content/YOLOv8_test_wires.zip /content/runs/segment/predict16

"""### YOLO-VIS+UAV"""

!yolo task=segment mode=predict model=/content/VIS+UAV-best.pt conf=0.3 source=/content/DDOS-wires save=true

!zip -r /content/YOLO_VIS_UAV_test_wires.zip /content/runs/segment/predict15/

"""### DDOS-Fine-Tuning"""

!yolo task=segment mode=predict model=/content/fisheye-UAV-VIS-everything-best.pt conf=0.3 source=/content/DDOS-wires save=true

!zip -r /content/DDOS_Finetuning_test_wires.zip /content/runs/segment/predict14

"""## ICL data

### Original YOLOv8
"""

!yolo task=segment mode=predict model=yolov8s-seg.pt conf=0.7 source=/content/ICLdata save=true

# import glob
# from IPython.display import Image, display

# for image_path in glob.glob(f'runs/segment/predict4/*.jpg'):
#       display(Image(filename=image_path, height=600))
#       print("\n")
!zip -r /content/YOLOv8_test_ICL.zip /content/runs/segment/predict7

"""### YOLO-VIS+UAV"""

!yolo task=segment mode=predict model=/content/VIS+UAV-best.pt conf=0.7 source=/content/ICLdata save=true

!zip -r /content/YOLO_VIS_UAV_test_ICL.zip /content/runs/segment/predict8

"""### DDOS-Fine-Tuning"""

!yolo task=segment mode=predict model=/content/fisheye-UAV-VIS-everything-best.pt conf=0.7 source=/content/ICLdata save=true

!zip -r /content/DDOS_Finetuning_test_ICL.zip /content/runs/segment/predict9